security:
# config/packages/security.yaml
    password_hashers:
        # Utilisation d'auto pour permettre l'Ã©volution de l'algorithme
        App\Entity\User:
            algorithm: auto
    
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
# firewalls: This is the main section where different firewall configurations are defined.
# dev: This is the name of the specific firewall configuration, likely for the development environment.
# pattern: This defines a regular expression pattern that matches certain URLs. In this case, it matches URLs that start with /_(profiler|wdt) or /css, /images, or /js.
# security: This is set to false, meaning that security measures (like authentication) are not applied to the URLs that match the pattern.                
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                default_target_path: /
                username_parameter: email
                password_parameter: password
            logout:
                path: app_logout
                target: /
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }                
                # where to redirect after logout
                # target: app_any_route
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    # password_hashers:
    #     App\Entity\User:
    #         algorithm: auto

    role_hierarchy:
        ROLE_EDIT: ROLE_USER
        ROLE_ADMIN: ROLE_EDIT
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
